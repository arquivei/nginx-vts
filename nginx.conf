load_module "modules/ngx_http_geoip2_module.so";

user  nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    multi_accept on;
    use epoll;
}

http {
    map $http_x_forwarded_for $realip {
        ~^(\d+\.\d+\.\d+\.\d+) $1;
        default $remote_addr;
    }

    geoip2 /usr/share/geoip/GeoLite2-Country.mmdb {
        auto_reload 60m;
        $geoip2_metadata_country_build metadata build_epoch;
        $geoip2_data_country_code source=$realip country iso_code;
        $geoip2_data_country_name source=$realip country names en;
    }
    geoip2 /usr/share/geoip/GeoLite2-City.mmdb {
        auto_reload 60m;
        $geoip2_metadata_city_build metadata build_epoch;
        $geoip2_data_city source=$realip city names en;
        $geoip2_data_latitude source=$realip location latitude;
        $geoip2_data_longitude source=$realip location longitude;
        $geoip2_data_time_zone source=$realip location time_zone;
        $geoip2_data_region source=$realip subdivisions iso_code;
        $geoip2_data_region_name source=$realip subdivisions names en;
        $geoip2_data_country_code source=$realip country iso_code;
        $geoip2_data_country_name source=$realip country names en;
        $geoip2_data_continent_code source=$realip continent code;
    }

    vhost_traffic_status_zone;
    vhost_traffic_status_filter_by_set_key $geoip2_data_country_code country::*;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format json_combined escape=json '{"time_local":"$time_local", '
        '"proxy_addr":"$remote_addr", '
        '"remote_addr":"$http_x_forwarded_for", '
        '"remote_user":"$remote_user", '
        '"request":"$request", '
        '"status":"$status", '
        '"geoip":{'
            '"ip":"$http_x_forwarded_for", '
            '"latitude":"$geoip2_data_latitude", '
            '"longitude":"$geoip2_data_longitude", '
            '"region_code":"$geoip2_data_region", '
            '"region_name":"$geoip2_data_region_name", '
            '"city_name":"$geoip2_data_city", '
            '"country_name":"$geoip2_data_country_name", '
            '"country_code2":"$geoip2_data_country_code", '
            '"continent_code":"$geoip2_data_continent_code", '
            '"time_zone":"$geoip2_data_time_zone" '
        '}, '
        '"body_bytes_sent":"$body_bytes_sent", '
        '"request_time":"$request_time", '
        '"upstream_connect_time":"$upstream_connect_time", '
        '"upstream_header_time":"$upstream_header_time", '
        '"upstream_response_time":"$upstream_response_time", '
        '"http_referrer":"$http_referer", '
        '"http_user_agent":"$http_user_agent"}';

    access_log /dev/stdout json_combined;
    error_log /dev/stderr info;

    # Copy data between file descriptors within the kernel
    # Faster then read() + write()
    sendfile        on;
    # Send all headers at once
    tcp_nopush      on;
    # Don't buffer data when sending. Good for small data bursts in real time
    tcp_nodelay     on;

    keepalive_timeout  65;

    gzip  on;
    gzip_min_length 10240;
    gzip_disable msie6;

    # Allow the server to close connection on non responding client. This will free up memory
    reset_timedout_connection on;

    include /etc/nginx/conf.d/*.conf;

    server {
        listen 11050;
        server_name nginx_vts_status
        access_log off;
        vhost_traffic_status_filter_by_set_key $geoip2_data_country_code country::$server_name;

        location /status {
            vhost_traffic_status_bypass_limit on;
            vhost_traffic_status_bypass_stats on;
            vhost_traffic_status_display;
            vhost_traffic_status_display_format json;
        }
    }
}

